import { useContext, useRef, useEffect } from 'react';
import { useCallbackOne } from 'use-memo-one';
import { AnalyticsReactContext, } from './AnalyticsReactContext';
import UIAnalyticsEvent from './UIAnalyticsEvent';
export function useAnalyticsEvents() {
    var analyticsContext = useContext(AnalyticsReactContext);
    var contextRef = useRef(analyticsContext);
    useEffect(function () {
        contextRef.current = analyticsContext;
    }, [analyticsContext]);
    var createAnalyticsEvent = useCallbackOne(function (payload) {
        var current = contextRef.current;
        var context = current.getAtlaskitAnalyticsContext
            ? current.getAtlaskitAnalyticsContext()
            : [];
        var handlers = current.getAtlaskitAnalyticsEventHandlers
            ? current.getAtlaskitAnalyticsEventHandlers()
            : [];
        return new UIAnalyticsEvent({
            context: context,
            handlers: handlers,
            payload: payload,
        });
    }, []);
    return {
        createAnalyticsEvent: createAnalyticsEvent,
    };
}
//# sourceMappingURL=useAnalyticsEvents.js.map