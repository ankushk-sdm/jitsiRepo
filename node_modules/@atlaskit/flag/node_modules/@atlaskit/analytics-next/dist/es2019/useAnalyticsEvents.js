import { useContext, useRef, useEffect } from 'react';
import { useCallbackOne } from 'use-memo-one';
import { AnalyticsReactContext, } from './AnalyticsReactContext';
import UIAnalyticsEvent from './UIAnalyticsEvent';
export function useAnalyticsEvents() {
    const analyticsContext = useContext(AnalyticsReactContext);
    const contextRef = useRef(analyticsContext);
    useEffect(() => {
        contextRef.current = analyticsContext;
    }, [analyticsContext]);
    const createAnalyticsEvent = useCallbackOne((payload) => {
        const current = contextRef.current;
        const context = current.getAtlaskitAnalyticsContext
            ? current.getAtlaskitAnalyticsContext()
            : [];
        const handlers = current.getAtlaskitAnalyticsEventHandlers
            ? current.getAtlaskitAnalyticsEventHandlers()
            : [];
        return new UIAnalyticsEvent({
            context,
            handlers,
            payload,
        });
    }, []);
    return {
        createAnalyticsEvent,
    };
}
//# sourceMappingURL=useAnalyticsEvents.js.map